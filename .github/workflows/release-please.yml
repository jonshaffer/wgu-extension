name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
      patch: ${{ steps.release.outputs.patch }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  # Build and attach extension artifacts when a release is created
  build-release:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build production extensions
        run: |
          npm run build:prod
          npm run zip
          npm run zip:firefox
          npm run zip:edge
      
      - name: Upload release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.release-please.outputs.tag_name }} .output/*.zip

  # Automatically submit to extension stores when a release is created
  store-submission:
    runs-on: ubuntu-latest
    needs: [release-please, build-release]
    if: ${{ needs.release-please.outputs.release_created }}
    environment: production # Use environment protection for store secrets
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build and zip for stores
        run: |
          npm run build:prod
          npm run zip
          npm run zip:firefox
          npm run zip:edge

      - name: Submit to Chrome Web Store (optional)
        run: |
          if [ -n "${CHROME_EXTENSION_ID}" ] && [ -n "${CHROME_CLIENT_ID}" ] && [ -n "${CHROME_CLIENT_SECRET}" ] && [ -n "${CHROME_REFRESH_TOKEN}" ]; then
            npx wxt submit --chrome-zip .output/*-chrome.zip
          else
            echo "Chrome Web Store secrets not set; skipping."
          fi
        env:
          CHROME_EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
          CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
          CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}

      - name: Submit to Firefox Add-ons (optional)
        run: |
          if [ -n "${FIREFOX_EXTENSION_ID}" ] && [ -n "${FIREFOX_JWT_ISSUER}" ] && [ -n "${FIREFOX_JWT_SECRET}" ]; then
            npx wxt submit --firefox-zip .output/*-firefox.zip --firefox-sources-zip .output/*-sources.zip
          else
            echo "Firefox Add-ons secrets not set; skipping."
          fi
        env:
          FIREFOX_EXTENSION_ID: ${{ secrets.FIREFOX_EXTENSION_ID }}
          FIREFOX_JWT_ISSUER: ${{ secrets.FIREFOX_JWT_ISSUER }}
          FIREFOX_JWT_SECRET: ${{ secrets.FIREFOX_JWT_SECRET }}

      - name: Submit to Microsoft Edge Add-ons (optional)
        run: |
          if [ -n "${EDGE_PRODUCT_ID}" ] && [ -n "${EDGE_CLIENT_ID}" ] && [ -n "${EDGE_CLIENT_SECRET}" ] && [ -n "${EDGE_TENANT_ID}" ]; then
            npm exec --yes edge-addons-cli@1.12.0 upload \
              --product-id "${EDGE_PRODUCT_ID}" \
              --zip ".output/*-edge.zip" \
              --client-id "${EDGE_CLIENT_ID}" \
              --client-secret "${EDGE_CLIENT_SECRET}" \
              --access-token-url "https://login.microsoftonline.com/${EDGE_TENANT_ID}/oauth2/v2.0/token" \
              --wait-for-publish
          else
            echo "Edge Add-ons secrets not set; skipping."
          fi
        env:
          EDGE_PRODUCT_ID: ${{ secrets.EDGE_PRODUCT_ID }}
          EDGE_CLIENT_ID: ${{ secrets.EDGE_CLIENT_ID }}
          EDGE_CLIENT_SECRET: ${{ secrets.EDGE_CLIENT_SECRET }}
          EDGE_TENANT_ID: ${{ secrets.EDGE_TENANT_ID }}

name: Publish Raw Data to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'extension/data/**'
      - '.github/workflows/publish-data-pages.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Prepare site content (discord + reddit + wgu-connect + wgu-student-groups + catalogs)
        run: |
          set -euo pipefail
          mkdir -p \
            site/data/discord/raw \
            site/data/discord/processed \
            site/data/reddit/raw \
            site/data/wgu-connect/raw \
            site/data/wgu-student-groups/raw \
            site/data/catalogs/parsed \
            site/schemas
          # Copy whitelisted raw data only
          if [ -d "extension/data/discord/raw" ]; then
            cp -R extension/data/discord/raw/. site/data/discord/raw/
          fi
          if [ -d "extension/data/discord/processed" ]; then
            cp -R extension/data/discord/processed/. site/data/discord/processed/
          fi
          if [ -d "extension/data/reddit/raw" ]; then
            cp -R extension/data/reddit/raw/. site/data/reddit/raw/
          fi
          if [ -d "extension/data/wgu-connect/raw" ]; then
            cp -R extension/data/wgu-connect/raw/. site/data/wgu-connect/raw/
          fi
          if [ -d "extension/data/wgu-student-groups/raw" ]; then
            cp -R extension/data/wgu-student-groups/raw/. site/data/wgu-student-groups/raw/
          fi
          # Copy parsed catalogs (JSON only)
          if [ -d "extension/data/catalogs/parsed" ]; then
            cp -R extension/data/catalogs/parsed/. site/data/catalogs/parsed/
          fi

          # Copy relevant JSON Schemas
          for f in \
            extension/data/catalogs/types/catalog-data.schema.json \
            extension/data/discord/types/discord-community.schema.json \
            extension/data/discord/types/discord-communities.schema.json \
            extension/data/reddit/types/reddit-community.schema.json; do
            if [ -f "$f" ]; then
              cp "$f" site/schemas/
            fi
          done
          # Create .nojekyll to prevent Jekyll processing
          touch site/.nojekyll
          # Optional: add a simple index.json to browse available raw data
          node -e '
            const fs=require("fs");
            function list(dir){
              if(!fs.existsSync(dir)) return [];
              const entries=fs.readdirSync(dir,{withFileTypes:true});
              return entries.map(e=> e.isDirectory()? {name:e.name, type:"dir"} : {name:e.name, type:"file"});
            }
            const tree = {};
            const bases = [
              "site/data/discord/raw",
              "site/data/discord/processed",
              "site/data/reddit/raw",
              "site/data/wgu-connect/raw",
              "site/data/wgu-student-groups/raw",
              "site/data/catalogs/parsed",
              "site/schemas"
            ];
            for (const base of bases) {
              let key = base.split("/")[2]; // discord, reddit, catalogs, or site
              if (key === "site") key = "schemas";
              const last = base.split("/").slice(-1)[0];
              if (!tree[key]) tree[key] = {};
              if (key === "discord") {
                tree[key][last] = list(base);
              } else {
                tree[key] = list(base);
              }
            }
            const payload = {
              generatedAt: new Date().toISOString(),
              basePaths: {
                discord: { raw: "/data/discord/raw", processed: "/data/discord/processed" },
                reddit: "/data/reddit/raw",
                wguConnect: "/data/wgu-connect/raw",
                wguStudentGroups: "/data/wgu-student-groups/raw",
                catalogs: "/data/catalogs/parsed",
                schemas: "/schemas"
              },
              directories: tree
            };
            fs.writeFileSync("site/index.json", JSON.stringify(payload,null,2));
          '

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

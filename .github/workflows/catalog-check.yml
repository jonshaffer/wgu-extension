name: WGU Catalog Check

on:
  schedule:
    # Run on the 5th day of every month at 9:00 AM UTC
    - cron: '0 9 5 * *'
  workflow_dispatch:
    # Allow manual triggering

env:
  WGU_CATALOG_URL: 'https://www.wgu.edu/about/institutional-catalog.html'
  WGU_CATALOG_BASE_URL: 'https://www.wgu.edu/content/dam/wgu-65-assets/western-governors/documents/institutional-catalog'

jobs:
  check-new-catalog:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install poppler-utils (for PDF parsing)
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils
          
      - name: Install dependencies
        run: |
          cd extension && npm ci
          cd ../data && npm ci
        
      - name: Check catalog page structure
        id: page_check
        run: |
          echo "üîç Validating WGU catalog page structure..."
          cd extension && npx tsx scripts/check-wgu-catalog-page.ts
          
          # Check if page validation passed
          if [ $? -eq 0 ]; then
            echo "‚úÖ Catalog page validation passed"
            echo "PAGE_CHECK_PASSED=true" >> $GITHUB_ENV
          else
            echo "‚ùå Catalog page validation failed"
            echo "PAGE_CHECK_PASSED=false" >> $GITHUB_ENV
            
            # Still continue with catalog check but add warning
            echo "‚ö†Ô∏è Continuing with catalog check despite page validation issues"
          fi
          
      - name: Run catalog check
        id: catalog_check
        run: cd extension && npx tsx scripts/check-wgu-catalog.ts
        
      - name: Process new catalogs
        if: success()
        run: |
          # Check if we have results
          if [ -f "catalog-check-results.json" ]; then
            echo "üìä Catalog check results:"
            cat catalog-check-results.json
            
            # Parse results
            NEW_COUNT=$(node -p "JSON.parse(require('fs').readFileSync('catalog-check-results.json', 'utf8')).newCatalogs.length")
            
            if [ "$NEW_COUNT" -gt "0" ]; then
              echo "üéâ Found $NEW_COUNT new catalog(s)"
              echo "HAS_NEW_CATALOGS=true" >> $GITHUB_ENV
              
              # Parse and process new catalogs if we have the parsing tools
              if [ -d "data/sources/catalogs" ] && [ -f "data/pipelines/catalog/parse.ts" ]; then
                echo "üîÑ Processing new catalogs..."
                cd data
                
                # Run the parser on new catalogs and generate reports
                for catalog in sources/catalogs/catalog-*.pdf; do
                  if [ -f "$catalog" ]; then
                    catalog_name=$(basename "$catalog")
                    # Check if this is a newly downloaded catalog
                    if grep -q "$catalog_name" ../catalog-check-results.json 2>/dev/null; then
                      echo "üìÑ Processing $(basename "$catalog")"
                      
                      # Parse the catalog
                      if npx tsx pipelines/catalog/parse.ts "$catalog"; then
                        echo "‚úÖ Successfully parsed $catalog_name"
                        
                        # Generate health report
                        echo "üìä Generating health report for $catalog_name"
                        npx tsx pipelines/catalog/analytics/generate-report.ts "$catalog" || echo "‚ö†Ô∏è Could not generate health report"
                        
                        # Copy report to artifacts directory
                        report_name="${catalog_name%.pdf}.report.json"
                        if [ -f "sources/catalogs/$report_name" ]; then
                          cp "sources/catalogs/$report_name" "../$report_name"
                          echo "üìã Copied report: $report_name"
                        fi
                      else
                        echo "‚ùå Failed to parse $catalog_name"
                      fi
                    fi
                  fi
                done
                
                cd ..
              fi
            else
              echo "‚úÖ No new catalogs found"
              echo "HAS_NEW_CATALOGS=false" >> $GITHUB_ENV
            fi
          else
            echo "‚ùå No results file found"
            echo "HAS_NEW_CATALOGS=false" >> $GITHUB_ENV
          fi
          
      - name: Generate catalog comparison
        if: env.HAS_NEW_CATALOGS == 'true'
        run: |
          echo "üìä Generating catalog comparison report..."
          
          # Get the list of new catalogs from results
          NEW_CATALOG_LIST=$(node -p "JSON.parse(require('fs').readFileSync('catalog-check-results.json', 'utf8')).newCatalogs.join(' ')")
          
          if [ -n "$NEW_CATALOG_LIST" ]; then
            echo "üîç Comparing catalogs: $NEW_CATALOG_LIST"
            
            # Generate comparison report
            cd extension && npx tsx scripts/compare-catalogs.ts $NEW_CATALOG_LIST > ../catalog-comparison-report.md 2>/dev/null || {
              echo "‚ö†Ô∏è Could not generate comparison report" > ../catalog-comparison-report.md
              echo "The catalog comparison tool encountered an error. Manual review may be needed." >> ../catalog-comparison-report.md
            }
            
            echo "‚úÖ Comparison report generated"
          else
            echo "‚ö†Ô∏è No catalogs to compare" > catalog-comparison-report.md
          fi
          
      - name: Create Pull Request
        if: env.HAS_NEW_CATALOGS == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            feat: Add new WGU catalog(s) - $(date +%Y-%m)
            
            - Automatically detected and downloaded new WGU institutional catalog(s)
            - Processed catalogs with enhanced degree plan parsing
            - Updated catalog collection for extension
          title: üéì New WGU Catalog(s) Available - $(date +%Y-%m)
          body: |
            ## üéì New WGU Catalog(s) Detected
            
            This PR was automatically created by the monthly catalog check workflow.
            
            ### üìã Changes
            - ‚úÖ Downloaded new WGU institutional catalog(s)
            - ‚úÖ Parsed catalogs with unified parser
            - ‚úÖ Generated parsing health reports
            - üìä Parsing results included below
            
            ### üîç Page Validation
            $(if [ "$PAGE_CHECK_PASSED" = "true" ]; then echo "‚úÖ **WGU catalog page structure validated successfully**"; else echo "‚ö†Ô∏è **WGU catalog page validation had issues** - see artifacts for details"; fi)
            
            ### üîç Catalog Details
            ```json
            $(cat catalog-check-results.json)
            ```
            
            $(cat catalog-comparison-report.md 2>/dev/null || echo "### üìä Catalog Comparison\n\nComparison report not available.")
            
            ### üìä Parsing Results
            $(for report in catalog-*.report.json; do
              if [ -f "$report" ]; then
                echo "\n#### $(basename "$report" .report.json)"
                echo '```json'
                cat "$report" | jq -r '.summary // {}'
                echo '```'
              fi
            done || echo "No parsing reports available.")
            
            ### üéØ Next Steps
            1. Review the new catalog(s) for any significant changes
            2. Check the comparison report above for detailed changes
            3. $(if [ "$PAGE_CHECK_PASSED" = "false" ]; then echo "‚ö†Ô∏è **Review page validation report for potential issues**"; else echo "Verify degree plan parsing worked correctly"; fi)
            4. Test extension functionality with new catalog data
            5. Merge when ready to deploy
            
            ---
            *This PR was automatically generated by the WGU Catalog Check workflow*
          branch: feat/catalog-update-$(date +%Y-%m)
          branch-suffix: short-commit-hash
          delete-branch: true
          
      - name: Notify if no changes
        if: env.HAS_NEW_CATALOGS == 'false'
        run: |
          echo "‚úÖ Catalog check completed - no new catalogs found"
          echo "üìÖ Next check: $(date -d 'next month' '+%Y-%m-01')"
          
      - name: Upload catalog check results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: catalog-check-results-$(date +%Y-%m)
          path: |
            catalog-check-results.json
            catalog-comparison-report.md
            catalog-page-check-results.json
            catalog-page-check-report.md
            catalog-*.report.json
            data/sources/catalogs/*.pdf
            data/sources/catalogs/*.json
            data/analytics/reports/*.json
          retention-days: 30

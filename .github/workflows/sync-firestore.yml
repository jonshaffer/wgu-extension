name: Sync Firestore from GitHub Data

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  sync-firestore:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install DVC and Firebase CLI
        run: |
          pip install dvc[gdrive]
          npm install -g firebase-tools

      - name: Pull catalog files from DVC
        run: |
          dvc pull data/catalogs/parsed/

      - name: Set up Firebase credentials
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > serviceAccount.json

      - name: Run sync script
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/serviceAccount.json
        run: |
          npm run build || true # If you have a build step
          npx ts-node scripts/sync-github-to-firestore.ts

      - name: Build Functions and Update Emulator Data
        working-directory: functions
        run: |
          npm ci
          npm run build

      - name: Start Firestore Emulator and Seed Data
        working-directory: functions
        run: |
          # Start emulator in background
          firebase emulators:start --only firestore --project=wgu-extension-site-prod --port=8080 &
          EMULATOR_PID=$!
          
          # Wait for emulator to start
          echo "Waiting for Firestore emulator to start..."
          sleep 10
          
          # Seed the emulator with production data
          FIRESTORE_EMULATOR_HOST=localhost:8080 npm run test:seed
          
          # Export emulator data for DVC
          firebase emulators:export ./emulator-data --project=wgu-extension-site-prod
          
          # Stop emulator
          kill $EMULATOR_PID
          wait $EMULATOR_PID 2>/dev/null || true

      - name: Update DVC emulator data
        working-directory: functions
        run: |
          # Configure git for DVC operations
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add emulator data to DVC if not already tracked
          if [ ! -f "emulator-data.dvc" ]; then
            dvc add emulator-data
          fi
          
          # Push updated emulator data to DVC remote
          dvc push emulator-data.dvc || echo "DVC push failed, continuing..."

      - name: Commit DVC changes
        run: |
          git add functions/emulator-data.dvc functions/.gitignore
          if ! git diff --staged --quiet; then
            git commit -m "chore(emulator): update seeded emulator data via CI
            
            ðŸ¤– Generated with GitHub Actions
            - Seeded emulator with production data
            - Updated DVC-tracked emulator backup"
            git push
          else
            echo "No DVC changes to commit"
          fi

      - name: Clean up credentials
        run: rm serviceAccount.json
